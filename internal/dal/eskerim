–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É tx.Exec –∏ tx.QueryRow –≤ Go (PostgreSQL, database/sql)
–§—É–Ω–∫—Ü–∏—è	         |   –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å	                                                                    |  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç
tx.Exec	         |   –ö–æ–≥–¥–∞ –Ω–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, INSERT, UPDATE, DELETE –±–µ–∑ RETURNING)	    |   sql.Result (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö —Å—Ç—Ä–æ–∫)
tx.QueryRow	      |  –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, SELECT –∏–ª–∏ INSERT ... RETURNING id) |	*sql.Row (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞)


; —Ç–µ–∫ 1 –∂–æ–ª–¥—ã“£ —à—ã“õ“õ–∞–Ω—ã–Ω —Ç–µ–∫—Å–µ—Ä–º–µ–π–¥—ñ
tx.QueryRow	
QueryRow(query string, args ...any) *sql.Row
;  –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω–µ—Ç –±–æ–ª–µ–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, QueryRow –≤—Å–µ —Ä–∞–≤–Ω–æ –≤–æ–∑—å–º–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é.returning SUPPORT
; üîπ –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –Ω–µ—Ç, –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É sql.ErrNoRows.
 tx.Get
 Get(dest interface{}, query string, args ...interface{}) error

üîπ tx.Exec 
Exec(query string, args ...any) (sql.Result, error)
; –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç SELECT, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –æ–∂–∏–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, INSERT, UPDATE, DELETE).

; sqlx —Ç–µ –±–∞—Ä,–≤ –∞—Ä–≥—É–º–µ–Ω—Ç—Ç–µ—Ä –æ—Ä–Ω—ã–Ω–∞ –±–µ—Ä—Å–µ –±–æ–ª–∞–¥—ã
tx.NamedExec
NamedExec(query string, arg any) (sql.Result, error)

tx.Query
Query(query string, args ...any) (*sql.Rows, error)

NamedQuery(query string, arg interface{}) (*sqlx.Rows, error)




; –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Query
; for only one row, even it will be error if got 0 row
db.Get(&struct, Query, args...)  

; for get 0 or more rows
db.Select(&struct, query)



; PrepareNamed –∑–∞—á–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å NamedExec
; ChatGPT said:
–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! PrepareNamed –∏ NamedExec –æ–±–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ sqlx, –Ω–æ —É –Ω–∏—Ö —Ä–∞–∑–Ω—ã–µ —Ü–µ–ª–∏.

üîπ –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É PrepareNamed –∏ NamedExec

–§—É–Ω–∫—Ü–∏—è	–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å	                                                –í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞?

NamedExec	–ö–æ–≥–¥–∞ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑	                        –°—Ä–∞–∑—É –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å
PrepareNamed	–ö–æ–≥–¥–∞ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –º–Ω–æ–≥–æ —Ä–∞–∑	            –°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ




; COALESCE –≤ SQL ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–µ–Ω—É–ª–µ–≤–æ–µ (–Ω–µ NULL) –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
; –°–∏–Ω—Ç–∞–∫—Å–∏—Å:

COALESCE(value1, value2, ..., valueN)

–û–Ω–∞ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ NULL.
SELECT COALESCE(NULL, NULL, 'hello', 'world');  -- –≤–µ—Ä–Ω—ë—Ç 'hello'
SELECT COALESCE(name, 'Unknown') FROM users;


; to_tsvector —Å–∞–º –≤–Ω—É—Ç—Ä–∏ –¥–µ–ª–∞–µ—Ç –≤—Å—ë –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
; to_tsquery($1) —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ!


ts_rank()
; to_tsquery

; plainto_tsquery –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä AND –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ –∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ | (OR).


ts_rank –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø real (float4).











–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ?

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å ts_rank –±—ã—Å—Ç—Ä–æ, —Ç–æ–≥–¥–∞ –µ—Å—Ç—å —Ç–∞–∫–æ–π –ø—Ä–∏—ë–º:

‚úÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ —Ç–∏–ø–∞ tsvector –≤ —Ç–∞–±–ª–∏—Ü–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:

ALTER TABLE inventory ADD COLUMN search_vector tsvector;

–ü–æ—Ç–æ–º –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ:

UPDATE inventory SET search_vector = 
    setweight(to_tsvector('english', name), 'A') || 
    setweight(to_tsvector('english', description), 'B');

–°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å:

CREATE INDEX idx_inventory_search_vector ON inventory USING GIN (search_vector);

–ò —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π:

SELECT id, name, description, ...
FROM inventory
WHERE search_vector @@ to_tsquery($1)
ORDER BY ts_rank(search_vector, to_tsquery($1)) DESC;

–¢—É—Ç —É–∂–µ –±—É–¥–µ—Ç:

    –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å

    –∏ ts_rank –ø–æ –≥–æ—Ç–æ–≤–æ–º—É tsvector



/*
	   SELECT
	       m.id AS id,
	       m.name,
	       m.description,
	       m.price,
	       ts_rank(to_tsvector(m.name || ' ' || m.description), plainto_tsquery('chocolate | cake')) AS relevance
	   FROM
	       inventory m
	   WHERE
	       to_tsvector(m.name || ' ' || m.description) @@ plainto_tsquery('chocolate | cake')

*/
