services:
  app:
    build: .
    ports:
      - ${HOST_PORT:-8080}:8080
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
  db:
    ports:
      - ${DB_HOST_PORT}:5432 #by default 5432
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./migrations/1_inventory.sql:/docker-entrypoint-initdb.d/1_inventory.sql
      - ./migrations/2_menu.sql:/docker-entrypoint-initdb.d/2_menu.sql
      - ./migrations/3_order.sql:/docker-entrypoint-initdb.d/3_order.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      # test: [ "CMD-SHELL", "pg_isready -h someremotehost" ]
      # test: [ "CMD-SHELL", "pg_isready -h someremotehost -p 5432 -U latte -d frappuccino"]
      interval: 3s
      timeout: 5s
      retries: 10 # Если база данных заработает после всех retries, контейнер не вернется в healthy автоматически!
